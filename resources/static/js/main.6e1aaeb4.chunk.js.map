{"version":3,"sources":["init.ts","App.tsx","index.tsx"],"names":["init","Neutralino","events","onTrayMenuItemClicked","menuItem","id","os","showMessageBox","type","title","content","NL_VERSION","NL_CVERSION","app","exit","NL_MODE","console","log","setTray","icon","menuItems","text","e","App","React","useState","setText","useEffect","className","value","onChange","target","rows","cols","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yKAsCeA,G,MAtCF,WACX,IAmBE,GAlBAC,WAAWC,OAAS,CAClBC,sBAAuB,SAACC,GACtB,OAAQA,EAASC,IACf,IAAK,UACHJ,WAAWK,GAAGC,eAAe,CAC3BC,KAAM,OACNC,MAAO,sBACPC,QAAQ,yBAAD,OAA2BC,WAA3B,oCAAiEC,eAE1E,MACF,IAAK,OACHX,WAAWY,IAAIC,UAMvBb,WAAWD,OACK,WAAZe,QAEF,YADAC,QAAQC,IAAI,yDAWdhB,WAAWK,GAAGY,QARH,CACTC,KAAM,gCACNC,UAAW,CACT,CAAEf,GAAI,UAAWgB,KAAM,eACvB,CAAEhB,GAAI,MAAOgB,KAAM,KACnB,CAAEhB,GAAI,OAAQgB,KAAM,WAIxB,MAAOC,GACPN,QAAQC,IAAIK,M,OCVDC,EApBH,WAAO,IAAD,EACQC,IAAMC,SAAS,IADvB,mBACTJ,EADS,KACHK,EADG,KAKhB,OAHAF,IAAMG,WAAU,WACd3B,MACC,IAED,qBAAK4B,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,0BACEC,MAAOR,EACPS,SAAU,SAACR,GAAD,OAAOI,EAAQJ,EAAES,OAAOF,QAClCG,KAAM,EACNC,KAAM,MAEPZ,QCbTa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,mB","file":"static/js/main.6e1aaeb4.chunk.js","sourcesContent":["const init = () => {\n  try {\n    Neutralino.events = {\n      onTrayMenuItemClicked: (menuItem: any) => {\n        switch (menuItem.id) {\n          case \"VERSION\":\n            Neutralino.os.showMessageBox({\n              type: \"INFO\",\n              title: \"Version information\",\n              content: `Neutralinojs server: v${NL_VERSION} | Neutralinojs client: v${NL_CVERSION}`,\n            });\n            break;\n          case \"QUIT\":\n            Neutralino.app.exit();\n            break;\n        }\n      },\n    };\n\n    Neutralino.init();\n    if (NL_MODE !== \"window\") {\n      console.log(\"INFO: Tray menu is only available in the window mode.\");\n      return;\n    }\n    let tray = {\n      icon: \"/resources/icons/trayIcon.png\",\n      menuItems: [\n        { id: \"VERSION\", text: \"Get version\" },\n        { id: \"SEP\", text: \"-\" },\n        { id: \"QUIT\", text: \"Quit\" },\n      ],\n    };\n    Neutralino.os.setTray(tray);\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nexport default init;","import React from \"react\";\nimport \"./App.css\";\nimport init from \"./init\";\n\nconst App = () => {\n  const [text, setText] = React.useState(\"\");\n  React.useEffect(() => {\n    init();\n  }, []);\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <textarea\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          rows={5}\n          cols={100}\n        />\n        {text}\n      </header>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"neutralinoapp\")\n);\n"],"sourceRoot":""}